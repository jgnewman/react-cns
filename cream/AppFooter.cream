import React from 'react'
import ReactDOM from 'react-dom'
import reactify from './util/reactify'

propTypes = {
  filter: React.PropTypes.string.isRequired
  totalAmount: React.PropTypes.number.isRequired
  activeAmount: React.PropTypes.number.isRequired
  handleFilterAll: React.PropTypes.func.isRequired
  handleFilterActive: React.PropTypes.func.isRequired
  handleFilterComplete: React.PropTypes.func.isRequired
  handleClearComplete: React.PropTypes.func.isRequired
}

###
@public render - Renders the markup for the class.
###
render _ =>
  {
    filter, totalAmount, activeAmount, handleFilterAll,
    handleFilterActive, handleFilterComplete, handleClearComplete
  } = @props

  completedAmount = totalAmount - activeAmount
  pluralized = if activeAmount == 1 do 'item' else 'items'

  <footer className="footer">
    # This should be `0 items left` by default
    <span className="todo-count"><strong>activeAmount</strong>` ${pluralized} left`</span>
    # Remove this if you don't implement routing
    <ul className="filters">
      <li>
        <a
          className={if filter == 'all' do 'selected' else ''}
          onClick={handleFilterAll}>
          'All'
        </a>
      </li>
      <li>
        <a
          className={if filter == 'active' do 'selected' else ''}
          onClick={handleFilterActive}>
          'Active'
        </a>
      </li>
      <li>
        <a
          className={if filter == 'completed' do 'selected' else ''}
          onClick={handleFilterComplete}>
          'Completed'
        </a>
      </li>
    </ul>

    # Hidden if no completed items are left â†“
    when
      completedAmount
        <button
          className="clear-completed"
          onClick={handleClearComplete}>
          'Clear completed'
        </button>

      !completedAmount -> null

  </footer>

# Export a React class.
export reactify render, propTypes
