import PropTypes from 'prop-types'
import reactify from './util/reactify'
import TodoListItem from './TodoListItem'

# Define class proptypes
propTypes = {
  filter: PropTypes.string.isRequired
  items: PropTypes.array.isRequired
  toggleTodo: PropTypes.func.isRequired
  updateTodoValue: PropTypes.func.isRequired
  removeTodo: PropTypes.func.isRequired
  startEditing: PropTypes.func.isRequired
  stopEditing: PropTypes.func.isRequired
  handleDoubleClickItem: PropTypes.func.isRequired
  handleCheckItem: PropTypes.func.isRequired
  handleRemoveItem: PropTypes.func.isRequired
  handleKeyupItem: PropTypes.func.isRequired
  handleBlurItem: PropTypes.func.isRequired
  handleChangeItem: PropTypes.func.isRequired
}

###
@private buildClasses - Build a class list for a todo item
###
buildClasses { complete, editing } =>
  when
    !complete and !editing -> ''
    !complete and editing  -> 'editing'
    complete  and !editing -> 'completed'
    complete  and editing  -> 'completed editing'


###
@public buildItem - Build a todo item
###
buildItem item =>
  {
    removeTodo, toggleTodo, updateTodoValue, startEditing, stopEditing
    handleDoubleClickItem, handleCheckItem, handleRemoveItem
    handleKeyupItem, handleBlurItem, handleChangeItem
  } = @props

  <TodoListItem
    key={item.id}
    id={item.id}
    classList={buildClasses item}
    isChecked={if item.complete do true else false}
    labelText={item.value}
    toggleTodo={toggleTodo}
    updateTodoValue={updateTodoValue}
    removeTodo={removeTodo}
    startEditing={startEditing}
    stopEditing={stopEditing}
    handleDoubleClickItem={handleDoubleClickItem}
    handleCheckItem={handleCheckItem}
    handleRemoveItem={handleRemoveItem}
    handleKeyupItem={handleKeyupItem}
    handleBlurItem={handleBlurItem}
    handleChangeItem={handleChangeItem}
  />

###
@public buildList - Build a list of todo items based on how
                    the filter is currently set.
###
buildList filter, items => @buildList filter, items, []
buildList filter, [], accum => accum
buildList filter, [hd | tl], accum =>

  when

    # When the filter is 'all', build a Todo item
    filter == 'all'
      @buildList filter, tl, accum << (@buildItem hd)

    # When the filter is 'active' and the item is not marked complete,
    # build a Todo item
    filter == 'active' and !hd.complete
      @buildList filter, tl, accum << (@buildItem hd)

    # When the filter is 'completed' and the item is marked complete,
    # build a Todo item
    filter == 'completed' and hd.complete
      @buildList filter, tl, accum << (@buildItem hd)

    # Otherwise, don't build a todo item.
    true
      @buildList filter, tl, accum

###
@public render - Define markup for the class.
###
render _ =>
  { filter, items, removeTodo } = @props

  <ul className="todo-list">
    @buildList filter, items
  </ul>

# Export a React class
export reactify {{ render, buildList, buildItem }}, propTypes
